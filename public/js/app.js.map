{"version":3,"sources":["controllers/blogs.js","app.js","models/blog.js","controllers/mainController.js","models/work.js","controllers/works.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","views","blogs","templateUrl","controller","controllerAs","works","otherwise","Blog","$resource","id","update","method","BlogsIndexController","blogsIndex","this","query","data","MainController","$rootScope","stateFinder","event","toState","main","stateName","name","substring","$on","Work","WorksIndexController","worksIndex","angular","module","config","$inject","factory"],"mappings":"YAeA,SAAAA,QAAAC,EAAAC,GACAD,EACAE,MAAA,QACAC,IAAA,MAEAD,MAAA,SACAC,IAAA,WAEAD,MAAA,cACAC,IAAA,SACAC,OACAC,OACAC,YAAA,6BACAC,WAAA,uBACAC,aAAA,iBCNKN,MAAM,cACLC,IAAK,SACLC,OACEK,OACEH,YAAa,6BACbC,WAAY,uBACZC,aAAc,iBAItBP,EAAmBS,UAAU,KC7B/B,QAASC,MAAKC,GACZ,MAAO,IAAIA,GAAU,kBAAoBC,GAAI,SAC3CC,QAAUC,OAAQ,SFFtB,QAASC,sBAAqBJ,EAAWD,GACvC,GAAMM,GAAaC,IAEnBP,GAAKQ,MAAM,SAAAC,GACTH,EAAWZ,MAAQe,IGJvB,QAASC,gBAAeC,GAGtB,QAASC,GAAYC,EAAOC,GAC1BC,EAAKC,UAAYF,EAAQG,KAAKC,UAAU,EAAE,GAH5C,GAAMH,GAAOR,IAMbI,GAAWQ,IAAI,oBAAqBP,GCPtC,QAASQ,MAAKnB,GACZ,MAAO,IAAIA,GAAU,kBAAoBC,GAAI,SAC3CC,QAAUC,OAAQ,SCFtB,QAASiB,sBAAqBpB,EAAWmB,GACvC,GAAME,GAAaf,IAEnBa,GAAKZ,MAAM,SAAAC,GACTa,EAAWxB,MAAQW,IJRvBc,QAAQC,OAARD,aAAe,aAAc,cAC1BE,OAAOrC,QDaVA,OAAAsC,SAAA,iBAAA,sBEdAH,QAAQC,OAAO,aACZG,QAAQ,OAAQ3B,MAEnBA,KAAK0B,SAAW,aFHhBH,QAAQC,OAAO,aACZ5B,WAAW,uBAAwBS,sBAEtCA,qBAAqBqB,SAAW,YAAa,QGH7CH,QAAQC,OAAO,aACZ5B,WAAW,iBAAkBc,gBAEhCA,eAAegB,SAAW,cCH1BH,QAAQC,OAAO,aACZG,QAAQ,OAAQP,MAEnBA,KAAKM,SAAW,aCHhBH,QAAQC,OAAO,aACZ5B,WAAW,uBAAwByB,sBAEtCA,qBAAqBK,SAAW,YAAa","file":"app.js","sourcesContent":["angular.module('portfolio')\n  .controller('BlogsIndexController', BlogsIndexController);\n\nBlogsIndexController.$inject = ['$resource', 'Blog'];\nfunction BlogsIndexController($resource, Blog) {\n  const blogsIndex = this;\n\n  Blog.query(data => {\n    blogsIndex.blogs = data;\n  });\n}\n\n// ChallengesNewController.$inject = ['Challenge', '$state', '$auth'];\n// function ChallengesNewController(Challenge, $state, $auth) {\n//   const challengesNew = this;\n//   const payload = $auth.getPayload();\n//\n//   challengesNew.challenge = {};\n//   challengesNew.challenge.projectCreator = [payload._id];\n//\n//   function create() {\n//     Challenge.save(challengesNew.challenge, () => {\n//       $state.go('challengesIndex');\n//     });\n//   }\n//\n//\n//\n//   challengesNew.create = create;\n// }\n","angular.module('portfolio', ['ngResource', 'ui.router'])\n  .config(Router);\n\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('home', {\n      url: '/'\n    })\n    .state('about', {\n      url: '/about'\n    })\n    .state('blogsIndex', {\n      url: '/blogs',\n      views: {\n        'blogs': {\n          templateUrl: '/templates/blogsIndex.html',\n          controller: 'BlogsIndexController',\n          controllerAs: 'blogsIndex'\n        }\n      }\n    })\n    .state('worksIndex', {\n      url: '/works',\n      views: {\n        'works': {\n          templateUrl: '/templates/worksIndex.html',\n          controller: 'WorksIndexController',\n          controllerAs: 'worksIndex'\n        }\n      }\n    });\n  $urlRouterProvider.otherwise('/');\n}\n","angular.module('portfolio')\n  .factory('Blog', Blog);\n\nBlog.$inject = ['$resource'];\nfunction Blog($resource) {\n  return new $resource('/api/blogs/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('portfolio')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$rootScope'];\nfunction MainController($rootScope) {\n  const main = this;\n\n  function stateFinder(event, toState) {\n    main.stateName = toState.name.substring(0,4);\n  }\n\n  $rootScope.$on('$stateChangeStart', stateFinder);\n}\n","angular.module('portfolio')\n  .factory('Work', Work);\n\nWork.$inject = ['$resource'];\nfunction Work($resource) {\n  return new $resource('/api/works/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('portfolio')\n  .controller('WorksIndexController', WorksIndexController);\n\nWorksIndexController.$inject = ['$resource', 'Work'];\nfunction WorksIndexController($resource, Work) {\n  const worksIndex = this;\n\n  Work.query(data => {\n    worksIndex.works = data;\n  });\n}\n"]}