{"version":3,"sources":["js/appAdmin.js","js/controllers/admin.js","js/controllers/auth.js","js/models/blog.js","js/controllers/blogs.js","js/directives/dragDrop.js","js/controllers/images.js","js/models/user.js","js/models/work.js","js/controllers/works.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","views","admin","templateUrl","controller","controllerAs","otherwise","AdminHomeController","adminHome","this","title","LoginController","$auth","$state","submit","login","isLoggedIn","loginUrl","credentials","then","currentUser","getPayload","go","authenticate","service","Blog","$resource","id","update","method","BlogsIndexController","blogsIndex","query","data","blogs","BlogCreateController","addArticle","console","log","blogCreate","blog","save","_id","authUser","author","BlogShowController","blogShow","get","params","dragdrop","restrict","replace","link","$scope","element","on","e","preventDefault","files","target","dataTransfer","ImageUploaderController","User","Work","WorksIndexController","worksIndex","works","WorkCreateController","workCreate","work","WorkShowController","workShow","angular","module","config","$inject","factory","directive"],"mappings":"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","file":"appAdmin.js","sourcesContent":["angular.module('admin', ['ngResource', 'ui.router', 'satellizer'])\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('home', {\n      url: '/',\n      views: {\n        'admin': {\n          templateUrl: '/admin/templates/login.html',\n          controller: 'LoginController',\n          controllerAs: 'login'\n        }\n      }\n    })\n    .state('adminHome', {\n      url: '/home',\n      views: {\n        'admin': {\n          templateUrl: '/admin/templates/adminHome.html',\n          controller: 'AdminHomeController',\n          controllerAs: 'adminHome'\n        }\n      }\n    })\n    .state('imageUpload', {\n      url: '/imageUploader',\n      views: {\n        'admin': {\n          templateUrl: '/admin/templates/imageUploader.html',\n          controller: 'ImageUploaderController',\n          controllerAs: 'imageUploader'\n        }\n      }\n    })\n\n    // Blogs\n    .state('blogsIndex', {\n      url: '/blogs',\n      views: {\n        'admin': {\n          templateUrl: '/admin/templates/blogsIndex.html',\n          controller: 'BlogsIndexController',\n          controllerAs: 'blogsIndex'\n        }\n      }\n    })\n    .state('blogCreate', {\n      url: '/blogs/new',\n      views: {\n        'admin': {\n          templateUrl: '/admin/templates/blogCreate.html',\n          controller: 'BlogCreateController',\n          controllerAs: 'blogCreate'\n        }\n      }\n    })\n    .state('blogShow', {\n      url: '/blogs/:id',\n      views: {\n        'admin': {\n          templateUrl: '/admin/templates/blogShow.html',\n          controller: 'BlogShowController',\n          controllerAs: 'blogShow'\n        }\n      }\n    })\n\n    // Works\n    .state('worksIndex', {\n      url: '/works',\n      views: {\n        'admin': {\n          templateUrl: '/admin/templates/worksIndex.html',\n          controller: 'WorksIndexController',\n          controllerAs: 'worksIndex'\n        }\n      }\n    })\n    .state('workCreate', {\n      url: '/works/new',\n      views: {\n        'admin': {\n          templateUrl: '/admin/templates/workCreate.html',\n          controller: 'WorkCreateController',\n          controllerAs: 'workCreate'\n        }\n      }\n    })\n    .state('workShow', {\n      url: '/works/:id',\n      views: {\n        'admin': {\n          templateUrl: '/admin/templates/workShow.html',\n          controller: 'WorkShowController',\n          controllerAs: 'workShow'\n        }\n      }\n    });\n  $urlRouterProvider.otherwise('/');\n}\n","angular.module('admin')\n  .controller('AdminHomeController', AdminHomeController);\n\nfunction AdminHomeController() {\n  const adminHome = this;\n  adminHome.title = 'This is the admin panel';\n\n}\n","angular.module('admin')\n.controller('LoginController', LoginController);\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    login.isLoggedIn = true;\n    $auth.loginUrl = '/api/auth/login';\n\n    $auth.login(login.credentials)\n      .then(() => {\n        login.currentUser = $auth.getPayload();\n        $state.go('adminHome');\n      });\n  }\n\n  function authenticate(service) {\n    $auth.authenticate(service)\n    .then(() => {\n      $state.go('adminHome');\n    });\n  }\n\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular.module('admin')\n  .factory('Blog', Blog);\n\nBlog.$inject = ['$resource'];\nfunction Blog($resource) {\n  return new $resource('/api/blogs/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('admin')\n  .controller('BlogsIndexController', BlogsIndexController)\n  .controller('BlogCreateController', BlogCreateController)\n  .controller('BlogShowController', BlogShowController);\n\nBlogsIndexController.$inject = ['$resource', 'Blog'];\nfunction BlogsIndexController($resource, Blog) {\n  const blogsIndex = this;\n\n  Blog.query(data => {\n    blogsIndex.blogs = data;\n  });\n}\n\nBlogCreateController.$inject = ['$resource', '$state', '$auth', 'Blog'];\nfunction BlogCreateController($resource, $state, $auth, Blog) {\n  const blogCreate = this;\n\n  blogCreate.authUser = $auth.getPayload();\n  if(blogCreate.authUser) {\n    blogCreate.authUser = blogCreate.authUser._id;\n  }\n\n  blogCreate.blog = {\n    author: blogCreate.authUser\n  };\n\n  function addArticle() {\n    console.log(blogCreate.blog);\n    Blog.save(blogCreate, (data) => {\n      $state.go('blogShow', {id: data._id});\n    });\n  }\n\n  blogCreate.addArticle = addArticle;\n}\n\nBlogShowController.$inject = ['$resource', 'Blog', '$state'];\nfunction BlogShowController($resource, Blog, $state) {\n  const blogShow = this;\n\n  Blog.get($state.params, data => {\n    blogShow.data = data;\n  });\n}\n","angular.module('admin')\n  .directive('dragdrop', dragdrop);\n\nfunction dragdrop() {\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'templates/dragDrop.html',\n    link($scope, element) {\n      element\n        .on('dragover', (e) => {\n          e.preventDefault();\n          console.log('AGR');\n        })\n        .on('drop', (e) => {\n          e.preventDefault();\n          console.log('dropped');\n\n          const files = (e.target.files || e.dataTransfer.files)[0];\n          console.log(files);\n        });\n    }\n  };\n}\n","angular.module('admin')\n  .controller('ImageUploaderController', ImageUploaderController);\n\nImageUploaderController.$inject = ['$resource'];\nfunction ImageUploaderController($resource) {\n}\n","angular.module('admin')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\nfunction User($resource) {\n  return new $resource('/api/users/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('admin')\n  .factory('Work', Work);\n\nWork.$inject = ['$resource'];\nfunction Work($resource) {\n  return new $resource('/api/works/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('admin')\n  .controller('WorksIndexController', WorksIndexController)\n  .controller('WorkCreateController', WorkCreateController)\n  .controller('WorkShowController', WorkShowController);\n\nWorksIndexController.$inject = ['$resource', 'Work'];\nfunction WorksIndexController($resource, Work) {\n  const worksIndex = this;\n\n  Work.query(data => {\n    worksIndex.works = data;\n  });\n}\n\nWorkCreateController.$inject = ['$resource', '$state', '$auth', 'Work'];\nfunction WorkCreateController($resource, $state, $auth, Work) {\n  const workCreate = this;\n\n  workCreate.authUser = $auth.getPayload();\n  if(workCreate.authUser) {\n    workCreate.authUser = workCreate.authUser._id;\n  }\n\n  workCreate.work = {\n    author: workCreate.authUser\n  };\n\n  function addArticle() {\n    console.log(workCreate.work);\n    Work.save(workCreate, (data) => {\n      $state.go('workShow', {id: data._id});\n    });\n  }\n\n  workCreate.addArticle = addArticle;\n}\n\nWorkShowController.$inject = ['$resource', 'Work', '$state'];\nfunction WorkShowController($resource, Work, $state) {\n  const workShow = this;\n\n  Work.get($state.params, data => {\n    workShow.data = data;\n  });\n}\n"]}