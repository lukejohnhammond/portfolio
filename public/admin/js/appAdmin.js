"use strict";function Router(e,o){e.state("home",{url:"/",views:{admin:{templateUrl:"/admin/templates/login.html",controller:"LoginController",controllerAs:"login"}}}).state("adminHome",{url:"/home",views:{admin:{templateUrl:"/admin/templates/adminHome.html",controller:"AdminHomeController",controllerAs:"adminHome"}}}).state("imageUpload",{url:"/imageUploader",views:{admin:{templateUrl:"/admin/templates/imageUploader.html",controller:"ImageUploaderController",controllerAs:"imageUploader"}}}).state("blogsIndex",{url:"/blogs",views:{admin:{templateUrl:"/admin/templates/blogsIndex.html",controller:"BlogsIndexController",controllerAs:"blogsIndex"}}}).state("blogCreate",{url:"/blogs/new",views:{admin:{templateUrl:"/admin/templates/blogCreate.html",controller:"BlogCreateController",controllerAs:"blogCreate"}}}).state("blogShow",{url:"/blogs/:id",views:{admin:{templateUrl:"/admin/templates/blogShow.html",controller:"BlogShowController",controllerAs:"blogShow"}}}).state("worksIndex",{url:"/works",views:{admin:{templateUrl:"/admin/templates/worksIndex.html",controller:"WorksIndexController",controllerAs:"worksIndex"}}}).state("workCreate",{url:"/works/new",views:{admin:{templateUrl:"/admin/templates/workCreate.html",controller:"WorkCreateController",controllerAs:"workCreate"}}}).state("workShow",{url:"/works/:id",views:{admin:{templateUrl:"/admin/templates/workShow.html",controller:"WorkShowController",controllerAs:"workShow"}}}),o.otherwise("/")}function AdminHomeController(){var e=this;e.title="This is the admin panel"}function LoginController(e,o){function r(){l.isLoggedIn=!0,e.loginUrl="/api/auth/login",e.login(l.credentials).then(function(){l.currentUser=e.getPayload(),o.go("adminHome")})}function t(r){e.authenticate(r).then(function(){o.go("adminHome")})}var l=this;l.credentials={},l.submit=r,l.authenticate=t}function Blog(e){return new e("/api/blogs/:id",{id:"@_id"},{update:{method:"PUT"}})}function BlogsIndexController(e,o){var r=this;o.query(function(e){r.blogs=e})}function BlogCreateController(e,o,r,t){function l(){console.log(n.blog),t.save(n,function(e){o.go("blogShow",{id:e._id})})}var n=this;n.authUser=r.getPayload(),n.authUser&&(n.authUser=n.authUser._id),n.blog={author:n.authUser},n.addArticle=l}function BlogShowController(e,o,r){var t=this;o.get(r.params,function(e){t.data=e})}function dragdrop(){var e=new FileReader;return{restrict:"E",replace:!0,templateUrl:"templates/dragDrop.html",scope:{base64:"="},link:function(o,r){o.base64=null,o.error=null,o.active=!1,o.$watchGroup(["base64","src"],function(){o.image=o.base64||o.src}),e.onload=function(){o.base64=e.result,o.$apply()},r.on("dragover",function(){o.error=null,o.active=!0,o.$apply()}).on("dragover",function(e){e.preventDefault()}).on("dragleave",function(){o.active=!1,o.$apply()}).on("drop",function(r){r.preventDefault(),console.log("dropped");var t=(r.target.files||r.dataTransfer.files)[0];return t.size>4e4?(o.error="File is too large",void o.$apply()):void e.readAsDataURL(t)})}}}function Image(e){return new e("/api/images/:id",{id:"@_id"},{update:{method:"PUT"}})}function ImageUploaderController(e){function o(){console.log(r.data),e.save(r,function(){r.image={}})}var r=this;r.image={},r.addImage=o}function User(e){return new e("/api/users/:id",{id:"@_id"},{update:{method:"PUT"}})}function Work(e){return new e("/api/works/:id",{id:"@_id"},{update:{method:"PUT"}})}function WorksIndexController(e,o){var r=this;o.query(function(e){r.works=e})}function WorkCreateController(e,o,r,t){function l(){console.log(n.work),t.save(n,function(e){o.go("workShow",{id:e._id})})}var n=this;n.authUser=r.getPayload(),n.authUser&&(n.authUser=n.authUser._id),n.work={author:n.authUser},n.addArticle=l}function WorkShowController(e,o,r){var t=this;o.get(r.params,function(e){t.data=e})}angular.module("admin",["ngResource","ui.router","satellizer"]).config(Router),Router.$inject=["$stateProvider","$urlRouterProvider"],angular.module("admin").controller("AdminHomeController",AdminHomeController),angular.module("admin").controller("LoginController",LoginController),LoginController.$inject=["$auth","$state"],angular.module("admin").factory("Blog",Blog),Blog.$inject=["$resource"],angular.module("admin").controller("BlogsIndexController",BlogsIndexController).controller("BlogCreateController",BlogCreateController).controller("BlogShowController",BlogShowController),BlogsIndexController.$inject=["$resource","Blog"],BlogCreateController.$inject=["$resource","$state","$auth","Blog"],BlogShowController.$inject=["$resource","Blog","$state"],angular.module("admin").directive("dragdrop",dragdrop),angular.module("admin").factory("Image",Image),Image.$inject=["$resource"],angular.module("admin").controller("ImageUploaderController",ImageUploaderController),ImageUploaderController.$inject=["Image"],angular.module("admin").factory("User",User),User.$inject=["$resource"],angular.module("admin").factory("Work",Work),Work.$inject=["$resource"],angular.module("admin").controller("WorksIndexController",WorksIndexController).controller("WorkCreateController",WorkCreateController).controller("WorkShowController",WorkShowController),WorksIndexController.$inject=["$resource","Work"],WorkCreateController.$inject=["$resource","$state","$auth","Work"],WorkShowController.$inject=["$resource","Work","$state"];
//# sourceMappingURL=appAdmin.js.map
