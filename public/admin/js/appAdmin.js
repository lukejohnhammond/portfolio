"use strict";function Router(o,e){o.state("home",{url:"/",views:{admin:{templateUrl:"/admin/templates/login.html",controller:"LoginController",controllerAs:"login"}}}).state("adminHome",{url:"/home",views:{admin:{templateUrl:"/admin/templates/adminHome.html",controller:"AdminHomeController",controllerAs:"adminHome"}}}).state("imageUpload",{url:"/imageUploader",views:{admin:{templateUrl:"/admin/templates/imageUploader.html",controller:"ImageUploaderController",controllerAs:"imageUploader"}}}).state("blogsIndex",{url:"/blogs",views:{admin:{templateUrl:"/admin/templates/blogsIndex.html",controller:"BlogsIndexController",controllerAs:"blogsIndex"}}}).state("blogCreate",{url:"/blogs/new",views:{admin:{templateUrl:"/admin/templates/blogCreate.html",controller:"BlogCreateController",controllerAs:"blogCreate"}}}).state("blogShow",{url:"/blogs/:id",views:{admin:{templateUrl:"/admin/templates/blogShow.html",controller:"BlogShowController",controllerAs:"blogShow"}}}).state("worksIndex",{url:"/works",views:{admin:{templateUrl:"/admin/templates/worksIndex.html",controller:"WorksIndexController",controllerAs:"worksIndex"}}}).state("workCreate",{url:"/works/new",views:{admin:{templateUrl:"/admin/templates/workCreate.html",controller:"WorkCreateController",controllerAs:"workCreate"}}}).state("workShow",{url:"/works/:id",views:{admin:{templateUrl:"/admin/templates/workShow.html",controller:"WorkShowController",controllerAs:"workShow"}}}),e.otherwise("/")}function AdminHomeController(){var o=this;o.title="This is the admin panel"}function LoginController(o,e){function r(){t.isLoggedIn=!0,o.loginUrl="/api/auth/login",o.login(t.credentials).then(function(){t.currentUser=o.getPayload(),e.go("adminHome")})}function l(r){o.authenticate(r).then(function(){e.go("adminHome")})}var t=this;t.credentials={},t.submit=r,t.authenticate=l}function Blog(o){return new o("/api/blogs/:id",{id:"@_id"},{update:{method:"PUT"}})}function BlogsIndexController(o,e){var r=this;e.query(function(o){r.blogs=o})}function BlogCreateController(o,e,r,l){function t(){console.log(n.blog),l.save(n,function(o){e.go("blogShow",{id:o._id})})}var n=this;n.authUser=r.getPayload(),n.authUser&&(n.authUser=n.authUser._id),n.blog={author:n.authUser},n.addArticle=t}function BlogShowController(o,e,r){var l=this;e.get(r.params,function(o){l.data=o})}function dragdrop(){var o=new FileReader;return{restrict:"E",replace:!0,templateUrl:"templates/dragDrop.html",scope:{base64:"="},link:function(e,r){e.base64=null,e.active=!1,o.onload=function(){e.base64=o.result,console.log(o.result),e.$apply()},r.on("dragover",function(){e.active=!0,e.$apply()}).on("dragover",function(o){o.preventDefault(),console.log("AGR")}).on("dragleave",function(){e.active=!1,e.$apply()}).on("drop",function(e){e.preventDefault(),console.log("dropped");var r=(e.target.files||e.dataTransfer.files)[0];o.readAsDataURL(r)})}}}function ImageUploaderController(){var o=this;o.data={}}function User(o){return new o("/api/users/:id",{id:"@_id"},{update:{method:"PUT"}})}function Work(o){return new o("/api/works/:id",{id:"@_id"},{update:{method:"PUT"}})}function WorksIndexController(o,e){var r=this;e.query(function(o){r.works=o})}function WorkCreateController(o,e,r,l){function t(){console.log(n.work),l.save(n,function(o){e.go("workShow",{id:o._id})})}var n=this;n.authUser=r.getPayload(),n.authUser&&(n.authUser=n.authUser._id),n.work={author:n.authUser},n.addArticle=t}function WorkShowController(o,e,r){var l=this;e.get(r.params,function(o){l.data=o})}angular.module("admin",["ngResource","ui.router","satellizer"]).config(Router),Router.$inject=["$stateProvider","$urlRouterProvider"],angular.module("admin").controller("AdminHomeController",AdminHomeController),angular.module("admin").controller("LoginController",LoginController),LoginController.$inject=["$auth","$state"],angular.module("admin").factory("Blog",Blog),Blog.$inject=["$resource"],angular.module("admin").controller("BlogsIndexController",BlogsIndexController).controller("BlogCreateController",BlogCreateController).controller("BlogShowController",BlogShowController),BlogsIndexController.$inject=["$resource","Blog"],BlogCreateController.$inject=["$resource","$state","$auth","Blog"],BlogShowController.$inject=["$resource","Blog","$state"],angular.module("admin").directive("dragdrop",dragdrop),angular.module("admin").controller("ImageUploaderController",ImageUploaderController),ImageUploaderController.$inject=[],angular.module("admin").factory("User",User),User.$inject=["$resource"],angular.module("admin").factory("Work",Work),Work.$inject=["$resource"],angular.module("admin").controller("WorksIndexController",WorksIndexController).controller("WorkCreateController",WorkCreateController).controller("WorkShowController",WorkShowController),WorksIndexController.$inject=["$resource","Work"],WorkCreateController.$inject=["$resource","$state","$auth","Work"],WorkShowController.$inject=["$resource","Work","$state"];
//# sourceMappingURL=appAdmin.js.map
